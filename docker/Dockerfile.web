# ---- build stage ----
FROM node:20-alpine AS build
WORKDIR /app

# 固定 pnpm 版本（与本地/CI一致，举例 8.15.4；若坚持 v10，可用 10.x.y）
RUN corepack enable && corepack prepare pnpm@8.15.4 --activate

# 先只拷贝依赖清单，利用缓存
COPY package.json pnpm-lock.yaml* package-lock.json* yarn.lock* ./

# 安装依赖（严格用锁文件）
RUN pnpm install --frozen-lockfile

# pnpm v10 安全机制：显式批准需要运行的安装脚本（非交互）
# （pnpm@8 会忽略这行，不会报错；所以这行放着也安全）
RUN pnpm approve-builds --all || true

# 再拷贝源码
COPY . .

# 生产构建
RUN pnpm run build

# ---- run stage (nginx) ----
FROM nginx:1.27-alpine
COPY nginx/nginx.conf /etc/nginx/nginx.conf
COPY --from=build /app/dist /usr/share/nginx/html
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
