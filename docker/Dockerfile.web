# ---- build stage ----
FROM node:20-alpine AS build
WORKDIR /app

# 与本地一致使用 pnpm v10（示例 10.7.1；如本地不同，请改成你的确切版本）
RUN corepack enable && corepack prepare pnpm@10.7.1 --activate

# 仅拷贝依赖清单（不拷贝 pnpm-workspace.yaml，避免误触发 workspace）
COPY package.json pnpm-lock.yaml* package-lock.json* yarn.lock* ./

# 安装依赖（严格使用锁文件）
RUN pnpm install --frozen-lockfile

# 批准需要执行安装脚本的依赖（pnpm v10 安全机制；若已在 .npmrc 配置了 only-built-dependencies，这行也安全）
RUN pnpm approve-builds --all

# 再拷贝源码
COPY . .

# 生产构建
RUN pnpm run build

# ---- run stage (nginx) ----
FROM nginx:1.27-alpine
COPY nginx/nginx.conf /etc/nginx/nginx.conf
COPY --from=build /app/dist /usr/share/nginx/html
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
